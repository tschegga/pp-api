openapi: 3.0.0
info:
  title: CoH-Pottpokal API
  description: Specification for the API for the CoH-Pottpokal project.
  version: 1.0.0

paths:
  /v1/ranking:
    get:
      tags:
        - ranking
      summary: Returns the current ranking.
      security:
        - basicAuth: []
      responses:
        '200':
          description: A JSON array of usernames and their session count
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserInRanking"
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /v1/sessions:
    get:
      tags:
        - sessions
      summary: Return all sessions for a given userid
      security:
        - basicAuth: []
      responses:
        '200':
          description: A JSON array containing all sessions.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Session"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: User was not found
      parameters:
        - name: userid
          in: query
          description: UserID of session user
          schema:
            type: "string"
    put:
      tags:
        - sessions
      summary: Create new session in database
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddSession"            
      responses:
        '200':
          description: Creation was successful.
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    delete:
      tags:
        - sessions
      summary: Deletes given session with given sessionID
      security:
        - basicAuth: []
      responses:
        '200':
          description: Deletion was successful.
        '401':
          $ref: '#/components/responses/UnauthorizedError'
      parameters:
        - name: sessionid
          in: query
          description: sessionID of session
          schema:
            type: "string"
  /v1/users:
    get:
      tags:
        - users
      summary: Returns the user object for a given user and correct password.
      security:
        - basicAuth: []
      responses:
        '200':
          description: A JSON object that contains all user data.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: User with userid was not found.
      parameters:
        - name: username
          in: header
          description: Name of the user
          schema:
            type: "string"
        - name: password
          in: header
          description: An MD5 hash of the password of the user.
          schema:
            type: "string"
    put:
      tags:
        - users
      summary: Creates a new user in the database and returns newly created user.
      security:
        - basicAuth: []
      responses:
        '200':
          description: A JSON object that contains username, userid, rank, sessions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
      parameters:
        - name: username
          in: header
          description: Name of the user
          schema:
            type: "string"
        - name: password
          in: header
          description: An MD5 hash of the password of the user.
          schema:
            type: "string"
    delete:
      tags:
        - users
      summary: Deletes a user and all of his sessions.
      security:
        - basicAuth: []
      responses:
        '200':
          description: User and his sessions were successfully deleted.
        '401':
          $ref: '#/components/responses/UnauthorizedError'
      parameters:
        - name: username
          in: header
          description: Name of the user
          schema:
            type: "string"

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  schemas:
    User:
      type: "object"
      properties:
        userid:
          type: "integer"
        username:
          type: "string"
        rank:
          type: "integer"
        sessions:
          type: array
          items:
            $ref: '#/components/schemas/Session'
    UserInRanking:
      type: "object"
      properties:
        username:
          type: "string"
        sessioncount:
          type: "integer"
    Session:
      type: "object"
      properties:
        sessionid:
          type: "integer"
        start:
          type: "string"
        length:
          type: "integer"
        quality:
          type: "integer"
    AddSession:
      type: "object"
      properties:
        start:
          type: "string"
        length:
          type: "integer"
        quality:
          type: "integer"
  responses:
    UnauthorizedError:
      description: Authentication information is missing or invalid
      headers:
        WWW_Authenticate:
          schema:
            type: string

security:
  - basicAuth: []
